<?php Db::$medoo->update("stats",["visitors[+]" => 1],["page_name"=>"suspension"])?>
<h1><?php Helper::translate($_COOKIE['language'],"suspension") ?></h1>
<form method="POST">
    <div class="form-group">
        <label for="wheelposition"><?php Helper::translate($_COOKIE['language'],"wheelposition") ?></label>
        <input type="number" class="form-control" name="wheelposition" id="wheelposition" required>
    </div>
    <div class="form-group">
        <label for="carposition"><?php Helper::translate($_COOKIE['language'],"carposition") ?></label>
        <input type="number" class="form-control" name="carposition" id="carposition" required>
    </div>
    <div class="form-group">
        <label for="r">r</label>
        <input type="number" class="form-control" name="r" id="r" required>
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="animation" name="animation" value="1" checked>
        <label for="animation"><?php Helper::translate($_COOKIE['language'],"animation") ?></label>
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="graph" name="graph" value="1" checked>
        <label for="graph"><?php Helper::translate($_COOKIE['language'],"graph") ?></label>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-primary" name="send" value="<?php Helper::translate($_COOKIE['language'],'send') ?>">
    </div>
</form>
<?php
if(isset($_POST['send'])):
    $ir = trim($_POST['r']); $icp = trim($_POST['carposition']); $iwp = trim($_POST['wheelposition']);
    $arrContextOptions=array(
        "ssl"=>array(
            "verify_peer"=>false,
            "verify_peer_name"=>false,
        ),
        'http' => array('ignore_errors' => true),
    );
    $arr = file_get_contents("https://localhost:443/final/api.php?key=KHt9t83cmV6pfcyfSbcB9jyG7TnJMySYT28CUv2jSMN9RrNj&model=suspension&r={$ir}&wheel={$iwp}&car={$icp}", false, stream_context_create($arrContextOptions));
    $arr = json_decode($arr, true);
    if(isset($_POST['graph']) && $_POST['graph'] = 1): ?>
        <div id="chart"></div>
        <script>
            var chart = new CanvasJS.Chart("chart", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "dark2", // "light1", "light2", "dark1", "dark2"
                zoomEnabled: true,
                title:{
                    text: "<?php Helper::translate($_COOKIE["language"],"suspensiongraph") ?>"
                },
                data: [{
                    type: "line", //change type to bar, line, area, pie, etc
                    //indexLabel: "{y}", //Shows y value on all Data Points
                    indexLabelFontColor: "#5487c1",
                    indexLabelPlacement: "outside",
                    lineColor: "#5487c1",
                    dataPoints: [{x:0,y:0}]
                },{
                    type: "line", //change type to bar, line, area, pie, etc
                    //indexLabel: "{y}", //Shows y value on all Data Points
                    indexLabelFontColor: "#dc8e39",
                    indexLabelPlacement: "outside",
                    lineColor: "#dc8e39",
                    dataPoints: [{x:0,y:0}]
                }]
            });

            chart.options.data[0].dataPoints = <?= json_encode($arr['wheel']); ?>;
            chart.options.data[1].dataPoints = <?= json_encode($arr['car']); ?>;
            chart.render();
        </script>
    <?php endif;
    if(isset($_POST['animation']) && $_POST['animation'] = 1): ?>
        <div id="animation"></div>
        <script>
            let x, y;
            let wheel_pos = 0;
            let sus_pos = 0;
            var wheel_position = $arr['wheel'];
            var car_position = $arr['car'];
            let x, y, baseSize, counter = 0;
            var interval;

            function startInterval(){
              interval = setInterval(function(){
                intervalRedraw();
              }, 5000/count($arr['wheel']));
            }

            function intervalRedraw() {
              wheel_pos = wheel_position[counter]['y'];
              sus_pos = car_position[counter]['y'];
              redraw();
              counter++;
              if (counter == count($arr['wheel'])) {
                clearInterval(interval);
              }
            }

            function preload() {
              wheel = loadImage('http://localhost:443/final/public/img/models/wheel.svg');
              suspension = loadImage('http://localhost:443/final/public/img/models/suspension.svg');
            }

            function setup() {
              canvas=createCanvas(windowWidth, windowHeight);
              canvas.parent('animation');
              baseSize = width * 0.2;
              x = width * 0.5;
              y = height * 0.5;
            }

            function draw() {
              clear();
              push();
              susMove(x, y, sus_pos);
              wheelMove(0,0,wheel_pos);
              pop();
              startInterval();
            }

            function wheelMove(x,y,pos){
              translate(x,y);
              image(wheel, -(baseSize*0.3), -(baseSize*0.05)+pos, baseSize, baseSize);
            }

            function susMove(x, y, pos) {
              translate(x, y);
              image(suspension,0,-(baseSize/2)+pos,baseSize*0.4,baseSize);
            }

            function windowResized() {
              resizeCanvas(windowWidth, windowHeight);
            }
        </script>
    <?php endif; ?>
<?php endif;?>
